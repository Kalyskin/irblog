<?php

namespace AppBundle\Repository;

use AppBundle\Entity\User;

/**
 * BlogPostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BlogPostRepository extends \Doctrine\ORM\EntityRepository
{
  /**
   * @return int
   */
  public function getPostCount()
  {
    try {
      return $this->createQueryBuilder('bp')
        ->andWhere('bp.draft = 0')
        ->select('count(bp.id) as c')
        ->getQuery()
        ->getSingleScalarResult();
    } catch (\Exception $e) {
      return 0;
    }
  }

  /**
   * @param User $user
   * @return int
   */
  public function getPostCountByUser(User $user)
  {
    try {
      return $this->createQueryBuilder('bp')
        ->andWhere('bp.draft = 0 and bp.author =:author')
        ->setParameter('author', $user->getId())
        ->select('count(bp.id) as c')
        ->getQuery()
        ->getSingleScalarResult();
    } catch (\Exception $e) {
      return 0;
    }
  }

  public function getAllPosts($page = 1, $limit = 5)
  {
    $entityManager = $this->getEntityManager();
    $queryBuilder = $entityManager->createQueryBuilder();
    $queryBuilder
      ->select('bp')
      ->from('AppBundle:BlogPost', 'bp')
      ->where('bp.draft = 0')
      ->orderBy('bp.id', 'DESC')
      ->setFirstResult($limit * ($page - 1))
      ->setMaxResults($limit);

    return $queryBuilder->getQuery()->getResult();
  }

  public function getAllPostsByUser(User $user, $page = 1, $limit = 5)
  {
    $entityManager = $this->getEntityManager();
    $queryBuilder = $entityManager->createQueryBuilder();
    $queryBuilder
      ->select('bp')
      ->from('AppBundle:BlogPost', 'bp')
      ->where('bp.draft = 0 and bp.author =:author')
      ->setParameter('author', $user->getId())
      ->orderBy('bp.id', 'DESC')
      ->setFirstResult($limit * ($page - 1))
      ->setMaxResults($limit);

    return $queryBuilder->getQuery()->getResult();
  }
}
